version: '3'
services:
  camunda_acmesky:
    image: camunda/camunda-bpm-platform:wildfly
    container_name: camunda_acmesky
    ports: 
      - 10000:8080
      - 9990:9990
    networks:
      - acmesky-network
    restart: unless-stopped
  camunda_workers:
    build: ./camunda-workers
    container_name: camunda_workers
    networks:
      - acmesky-network
    env_file:
      - ./camunda-workers/.env
    environment:
      - PYTHONHASHSEED=1
    restart: unless-stopped
    depends_on:
      - acmesky_db
  geographical_distances:
    build: ./geographical-distances
    container_name: geographical_distances
    networks:
      - acmesky-network
    ports:
      - 5000:8080
    env_file:
      - ./geographical-distances/.env
  prontogram_backend:
    build: ./ProntoGram-Backend
    container_name: prontogram_backend
    networks:
      - acmesky-network
    depends_on:
      - prontogram_mq
    ports:
      - 5001:8080
  prontogram_mq:
    image: rabbitmq:3.8.11
    container_name: prontogram_mq
    hostname: prontogram_mq
    volumes:
      - prontogram_mq_data:/var/lib/rabbitmq
    networks:
      - acmesky-network
    logging:
      driver: none
  prontogram_frontend:
    build: ./ProntoGram-Frontend
    container_name: prontogram_frontend
    networks:
      - acmesky-network
    depends_on:
      - prontogram_mq
    ports:
      - 8000:8080
    env_file:
      - ./ProntoGram-Frontend/.env
  travel_company_1:
    build: ./travel-company
    container_name: travel_company_1
    volumes:
      - ./travel-company/travel_company_1.wsdl:/travelCompany/travel_company.wsdl
    networks:
      - acmesky-network
    ports:
      - 6001:8080
  travel_company_2:
    build: ./travel-company
    container_name: travel_company_2
    volumes:
      - ./travel-company/travel_company_2.wsdl:/travelCompany/travel_company.wsdl
    networks:
      - acmesky-network
    ports:
      - 6002:8080
  travel_company_3:
    build: ./travel-company
    container_name: travel_company_3
    volumes:
      - ./travel-company/travel_company_3.wsdl:/travelCompany/travel_company.wsdl
    networks:
      - acmesky-network
    ports:
      - 6003:8080
  flight_company_1:
    build: ./flight-company
    container_name: flight_company_1
    networks:
      - acmesky-network
    ports:
      - 7001:8080
    env_file:
      - ./flight-company/.env
    environment:
      POSTGRES_DB: flightcompany1
      POSTGRES_HOST: flight_companies_db
    depends_on:
      - flight_companies_db
    restart: unless-stopped # Necessary since the first run will fail if flight_companies_db is not ready yet
  flight_company_2:
    build: ./flight-company
    container_name: flight_company_2
    networks:
      - acmesky-network
    ports:
      - 7002:8080
    env_file:
      - ./flight-company/.env
    environment:
      POSTGRES_DB: flightcompany2
      POSTGRES_HOST: flight_companies_db
    depends_on:
      - flight_companies_db
    restart: unless-stopped # Necessary since the first run will fail if flight_companies_db is not ready yet
  flight_company_3:
    build: ./flight-company
    container_name: flight_company_3
    networks:
      - acmesky-network
    ports:
      - 7003:8080
    env_file:
      - ./flight-company/.env
    environment:
      POSTGRES_DB: flightcompany3
      POSTGRES_HOST: flight_companies_db
    depends_on:
      - flight_companies_db
    restart: unless-stopped # Necessary since the first run will fail if flight_companies_db is not ready yet
  flight_companies_db: # Shared postgres instance for flight companies
    image: postgres:13.2
    container_name: flight_companies_db
    env_file:
      - ./flight-company/.env
    volumes:
      - ./flight-company/init.sql:/docker-entrypoint-initdb.d/init.sql
      - flight_companies_db_data:/var/lib/postgresql
      - ./flight-company/example_data/:/example_data/
    networks:
      - acmesky-network
    logging:
      driver: none
  payment_provider_backend:
    build: ./PaymentProvider-Backend
    container_name: payment_provider_backend
    ports:
      - 4001:8080
    networks:
      - acmesky-network
    env_file:
      - ./PaymentProvider-Backend/.env
  payment_provider_frontend:
    build: ./PaymentProvider-Frontend
    container_name: payment_provider_frontend
    ports:
      - 4002:80
    networks:
      - acmesky-network
    volumes:
      - ./PaymentProvider-Frontend:/app/
  payment_provider_redis:
    image: redis:6.0.10
    container_name: payment_provider_redis
    networks:
      - acmesky-network
    logging:
      driver: none
  acmesky_backend:
    build: ./ACMESky-Backend
    container_name: acmesky_backend
    ports:
      - 9000:8080
    networks:
      - acmesky-network
    environment:
      - PYTHONHASHSEED=1
  acmesky_middleware:
    build: ./acmesky-middleware
    container_name: acmesky_middleware
    ports:
      - 9001:8080
    networks:
      - acmesky-network
    depends_on:
      - acmesky_mq
    env_file:
      - ./acmesky-middleware/.env
    environment:
      - PYTHONHASHSEED=1
  acmesky_frontend:
    build: ./ACMESky-Frontend
    container_name: acmesky_frontend
    ports:
      - 5002:80
    networks:
      - acmesky-network
    volumes:
      - ./ACMESky-Frontend:/app/
  acmesky_mongo:
    image: mongo:3.6.22-xenial
    container_name: acmesky_mongo
    networks:
      - acmesky-network
    environment:
      - MONGO_INITDB_DATABASE=interests
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./ACMESky-Backend/mongo_init.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - acmesky_mongo_data:/data/db
    logging:
      driver: none
  acmesky_mq:
    image: rabbitmq:3.8.11
    container_name: acmesky_mq
    hostname: acmesky_mq
    volumes:
      - acmesky_mq_data:/var/lib/rabbitmq
    networks:
      - acmesky-network
    logging:
      driver: none
  acmesky_db:
    image: postgres:13.2
    container_name: acmesky_db
    env_file:
      - ./camunda-workers/.env
    volumes:
      - ./camunda-workers/init.sql:/docker-entrypoint-initdb.d/init.sql
      - acmesky_db_data:/var/lib/postgresql
    networks:
      - acmesky-network
    logging:
      driver: none
  acmesky_redis:
    image: redis:6.0.10
    container_name: acmesky_redis
    networks:
      - acmesky-network
    logging:
      driver: none

networks:
  acmesky-network:
    driver: bridge

volumes:
  acmesky_mongo_data:
    driver: local
  acmesky_db_data:
    driver: local
  prontogram_mq_data:
    driver: local
  flight_companies_db_data:
    driver: local
  acmesky_mq_data:
    driver: local
